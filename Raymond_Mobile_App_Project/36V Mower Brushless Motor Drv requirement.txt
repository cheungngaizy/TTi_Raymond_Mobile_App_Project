在板子上，粗的線總共有五條，分別是紅黑藍黃綠。
紅和黑是電源線，紅色的為正極，黑色的為負極。此處（3.7-4.2）* 10V
藍黃綠粗線為無刷電機線。

細線總線有三種： 一條長的總線，一條短的總線，最後還有一條是單一的線。


長的為uart通訊線：（紅黑，然後還有另外兩個顏色分別為tx 和rx， 紅色為正極，黑色為負極，5V 電壓）

通訊協議如下：
串口参数：
1．	波特率：115200
2．	Data Bit: 8bits
3．	Parity: None
4．	StopBit: 1 

串口命令总长为：5个字节，以下我解释字节位置所代表的意思
1.	代表起始位： 0x55
2.	代表ID： 根据所需回传内容，以及命令内容
3.4. 代表数据： 最低为0x0000（hex） 0 （dec）， 最高为0xffff （hex）65535（dec）
5      代表结束位 0x55 

我这边发给你的串口命令：
1.	目标速度值（单位RPM，ID：0x00，可调节范围0到5000RPM，初始值：3000RPM）
	a.	如我目标速度值为5000RPM， 则我会发送（0x55, 0x00, 0x13, 0x88, 0xaa）给你
	b.	如我目标速度值为4500RPM， 则我会发送（0x55, 0x00, 0x11, 0x99, 0xaa）给你
	c.	如此类推
2.	最大额定功率的电流值（单位：mA，ID：0x01，可调范围0到 60A，初始值60000mA）
	a.	如我设定最高最大功率电流值为60000mA， 则我会发送（0x55,0x01,0xEA,0x60,0xAA）给你
	b.	如我设定最高最大功率电流值为40000mA， 则我会发送（0x55,0x01,0x9C,0x40,0xAA）给你
	c.	如此类推
3.	设定功率限制： （ID：0x02，on 和off）
	a.	如我要设定开启功率限制，则我会发送（0x55,0x02,0x11,0x11,0xAA）,在这个状态下会以所设定的最大额定功率电流值为限制工作，就算速度达不到也是可以的。
	b.	如我要设定关闭功率限制，则我会发送（0x55,0x02,0x00,0x00,0xAA）,在这个状态下不理会我设定的最大额定功率电流值，尽量达到我所需要的转速，直至电流过载为止。
以上给的串口命令，在您们的控制器接收到后，请回传一条相同的数据包给我，以确保能传送成功


你们给我回传的数据
1.	实时总电流值（单位mA, ID: 0x03）
	a.	格式：回传数据格式和上面的一样, 但是ID 变成 0x03
	b.	回传间隔： 50 毫秒自动回传一次
2.	实时电压值 (单位mV, ID: 0x04)
	a.	格式
		i.	如果要回传36,000mV 给我，则发送（0x55, 0x04,0x8C,0xA0, 0xaa）
		ii.	如此类推
		iii.	回传间隔：50ms 一次
3. 实时电机转速：（单位RPM，ID：0x05，间隔：50ms 一次）
  	a. 格式：
       i：如要回传3000rpm， 则回传（0x55, 0x05, 0x0B, 0xB8, 0xaa）
       ii: 如此类推                                          

有几种极端情况：
1. 当电流过载（最高为70A 或以上（这个我不知道））的时候，系统内部会自动断电和停止控制。
2.	当电流没有过载，但超过我所设定的电流值，则根据我是否有开启限制功率设定来决定，如限制功率要求来做。
3.	其他情况应听从命令来做




短的為控制線：（紅黑，然後還有兩種顏色的線，紅色為正極，黑色為負極，電壓為36V） 此處有信號為接地，無信號為3.3v或者5v。

在黑色線旁邊的那條線1，為開機通知線，這條線會把mcu 從不工作狀態到工作開機狀態。這條線邏輯為：當接到gnd，觸發信號。 
在紅色線旁邊的那條線2，為啟動馬達線，這條線會啟動馬達。這條線邏輯為：接到gnd，觸發信號。

當1線有信號時，mcu開啟，當無信號10秒后關閉，以及立刻關馬達轉動。
當2線有信號時，馬達開啟，否則關閉。

最後還有一條是單一的線：為電池保護線，需要給和電源線一樣的電壓。

以上說的東西，可以在我們寄給你們的sample 那裡測一測，不過，寄給你們那個sample， 不能驅動馬達。 mos管有問題。 其他正常。 
